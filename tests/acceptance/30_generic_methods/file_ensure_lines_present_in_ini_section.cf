#######################################################
#
# Test checking if a line is present in a section file
#
#######################################################

bundle common acc_path
{
  vars:
    "root" string => getenv("NCF_TESTS_ACCEPTANCE", 1024);
}

body common control
{
      inputs => { "${acc_path.root}/default.cf.sub", "${acc_path.root}/default_ncf.cf.sub", "@{ncf_inputs.default_files}" };
      bundlesequence  => { default("${this.promise_filename}") };
      version => "1.0";
}

#######################################################
bundle agent init
{
  vars:
    "tmp"             string => getenv("TEMP", 1024);
    "file"            string => "${tmp}/test.ini";
    "file_canon"      string => canonify("${file}");
    "section"         string => "test";

    "line"            string => "content";

    "reference_file"  string => "${tmp}/ref.ini";
    "base_text"       string => "[test]
This section as some irrelevant content";
    "reference"       string => "${base_text}
${line}";

  commands:
    "/bin/echo"
      args    => "\"${reference}\" > \"${reference_file}\"",
      contain => in_shell;

   "/bin/echo"
      args    => "\"${base_text}\" > \"${file}\"",
      contain => in_shell;

}

#######################################################

bundle agent test
{
  methods:
    "ph1" usebundle => file_ensure_lines_present_in_ini_section("${init.file}", "${init.section}", "${init.line}");
}

#######################################################

bundle agent check
{
  vars:
    "line_exists_test" string => "/usr/bin/diff \"${init.reference_file}\" \"${init.file}\"";

  classes:
    "line_exists" expression => returnszero("${line_exists_test}", "noshell");

    "ok"          expression => "line_exists.file_ensure_lines_present_in_ini_section_${init.file_canon}_ok.!file_ensure_lines_present_in_ini_section_${init.file_canon}_error";

  reports:
    ok::
      "$(this.promise_filename) Pass";
    !ok::
      "$(this.promise_filename) FAIL";
    !line_exists::
      "diff command doesn't return 0 for command: ${line_exists_test}";
}

