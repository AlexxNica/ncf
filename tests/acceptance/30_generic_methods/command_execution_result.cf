#######################################################
#
# Test the exit code of shell commands
#
#######################################################

bundle common acc_path
{
  vars:
    "root" string => getenv("NCF_TESTS_ACCEPTANCE", 1024);
}

body common control
{
      inputs => { "${acc_path.root}/default.cf.sub", "${acc_path.root}/default_ncf.cf.sub", "@{ncf_inputs.default_files}" };
      bundlesequence  => { configuration, default("${this.promise_filename}") };
      version => "1.0";
}

#######################################################

bundle agent init
{
  vars:
    "command_0"            string => "exit 0";
    "canonified_command_0" string => canonify("${command_name}");
}

#######################################################

bundle agent test
{
  vars:
    "kept_codes" string => "0,1, 2";
    "repaired_codes" string => "3, 4";

  methods:
    "phA" usebundle => command_execution_result("exit 0", "${kept_codes}", "${repaired_codes}");
    "phB" usebundle => command_execution_result("exit 2", "${kept_codes}", "${repaired_codes}");
    "phC" usebundle => command_execution_result("exit 3", "${kept_codes}", "${repaired_codes}");
    "phD" usebundle => command_execution_result("exit 4", "${kept_codes}", "${repaired_codes}");
    "phE" usebundle => command_execution_result("exit 5", "${kept_codes}", "${repaired_codes}");
}

#######################################################

bundle agent check
{
  classes:
    "ok_A" expression => "command_execution_result_exit_0_kept.!command_execution_result_exit_0_repaired.!command_execution_result_exit_0_error";
    "ok_B" expression => "command_execution_result_exit_2_kept.!command_execution_result_exit_2_repaired.!command_execution_result_exit_2_error";
    "ok_C" expression => "!command_execution_result_exit_3_kept.command_execution_result_exit_3_repaired.!command_execution_result_exit_3_error";
    "ok_D" expression => "!command_execution_result_exit_4_kept.command_execution_result_exit_4_repaired.!command_execution_result_exit_4_error";
    "ok_E" expression => "!command_execution_result_exit_5_kept.!command_execution_result_exit_5_repaired.command_execution_result_exit_5_error";

    "ok"  expression => "ok_A.ok_B.ok_C.ok_D.ok_E";

  reports:
    ok::
      "$(this.promise_filename) Pass";
    !ok::
      "$(this.promise_filename) FAIL";
}
