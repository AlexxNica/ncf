#####################################################################################
# Copyright 2013 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################
#########################################################################################################
# service_reload_command: Reload a service (for instance after a configuration modification), with a specific
# reload command
# Contract:
#  - Args:
#    -- "service_name", the name of the service 
#    -- "reload_command", the command to start the service
#  - Assumes
#  - Returns: defines a service_reload_${service_name}_{kept,repaired,ok,not_ok,reached}
# Usage example:
# methods:
#       "any" usebundle => service_reload_command("postgres", "/etc/init.d/postgresql reload");
#########################################################################################################
bundle agent service_reload_command(service_name, reload_command)
{
  vars:
      "class_prefix" string  => canonify("service_reload_${service_name}");

  commands:
      "${reload_command}"
        classes    => classes_generic("${class_prefix}");

  methods:
      "report_reload"
        usebundle  => _logger("${this.promise_filename}", "Reloading service ${service_name} with command ${reload_command}", "${class_prefix}"),
        ifvarclass => "${class_prefix}_reached";

}

