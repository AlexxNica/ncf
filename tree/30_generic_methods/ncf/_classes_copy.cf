#####################################################################################
# Copyright 2013 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

#####################################################################################
# _classes_copy: "Copy" classes based on a prefix into another prefix
# The goal is to bubble up classes from one bundle to another
# by copying classes from one contract to another
# Contract:
#  - Args:
#     -- "source_prefix", the prefix of the source class to copy
#     -- "dest_prefix" ,  the prefix of the destination class
#  - Returns: defines classes ${dest_prefix}_{kept,repaired,ok,not_ok,reached}, based 
#             on the defined sources classes
#  Usage example:
#  methods:
#      "any" usebundle => _classes_copy("source", "dest");
#####################################################################################
bundle agent _classes_copy(source_prefix, dest_prefix)
{
  vars:
      "suffix" slist => { "repaired", "ok", "reached", "failed", "not_ok", "not_kept", "not_repaired", "denied", "timeout", "kept" };

      "local_dest_prefix_${suffix}"
        string     => "${dest_prefix}_${suffix}",
        ifvarclass => "${source_prefix}_${suffix}",
        classes    => always("${dest_prefix}_${suffix}");
}


