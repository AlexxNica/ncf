#####################################################################################
# Copyright 2013 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# This is a bundle to ensure that a line is present in a section in a specific location
# The objective of this method is to handle INI-style files
#
# Contract:
#  - Args:
#     -- "file", file name to edit
#     -- "section", section where the lines should be added
#     -- "content_tab", an array containing all the entries to add in the file ( tab[section][option]="option_content" )
#  - Returns: defines a class file_ensure_lines_in_section_present_${target_file}_{kept,repaired,error,ok,reached}

bundle agent file_ensure_lines_in_section_present(file, section, content_tab)
{
  vars:
      "class_prefix" string => canonify("file_ensure_lines_in_section_present_${file}");

  files:
      "${file}"
        create        => "true",
        edit_line     => manage_variable_values_ini("${content_tab}", "${section}"),
        edit_defaults => no_backup,
	classes       => classes_generic("${class_prefix}");

  methods:
      "report"
        usebundle  => _logger("Insert line(s) ${lines} into ${file}", "${class_prefix}");
}
