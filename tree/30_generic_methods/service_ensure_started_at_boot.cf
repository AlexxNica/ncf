#####################################################################################
# Copyright 2014 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# @name Service ensure at boot
# @description Force a service to be started at boot
#
# @parameter service_name Service name (as recognized by init.d, upstart, etc...)
#
# @class_prefix service_ensure_started_at_boot
# @class_parameter service_name
# This bundle will define a class service_ensure_started_at_boot_${service_name}_{kept,repaired,error,ok,reached}
#
# Does not work (yet) on Debian
bundle agent service_ensure_started_at_boot(service_name)
{
  vars:
      "canonified_service_name"      string => canonify("${service_name}");
      "class_prefix"                 string => canonify("service_ensure_started_at_boot_${service_name}");

      "register_command"             string => "/sbin/chkconfig ${service_name} on";
      "canonified_command"           string => canonify("${register_command}");

  methods:
      "check_at_boot"
        usebundle => service_check_started_at_boot("${service_name}");

      "define_at_boot"
        usebundle  => command_execution("${service_ensure_started_at_boot.register_command}"),
        ifvarclass => "service_check_started_at_boot_${canonified_service_name}_not_ok";

      "already defined"
        usebundle => _classes_success("${class_prefix}"),
        ifvarclass => "service_check_started_at_boot_${canonified_service_name}_ok";

      "copy classes"
        usebundle  => _classes_copy("command_execution_${canonified_command}", "${class_prefix}"),
        ifvarclass => "service_check_started_at_boot_${canonified_service_name}_not_ok";

      "report"
        usebundle => _logger("Ensure service ${service_name} is set at boot", "${class_prefix}");

}
